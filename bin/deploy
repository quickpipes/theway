#!/usr/bin/env bash
set -Eeuo pipefail

trap cleanup SIGINT SIGTERM ERR EXIT

usage() {
  cat <<EOF
USAGE ${0} [-v] [-h]

This is a description of the script.
Honestly, write whatever you want.

Supported parameters :
-h, --help : display this message
-v, --verbose : enable enhanced logging
EOF
  exit 1
}

cleanup() {
  trap - SIGINT SIGTERM ERR EXIT
  # script cleanup here
  exit 0
}

info() {
  gum style --foreground=4 "$@"
}

warning() {
  gum style --foreground=3 "$@"
}

success() {
  gum style --bold --foreground=2 "$@"
}

error() {
  gum style --bold --foreground=1 "$@"
}

debug() {
  if [ "$DEBUG" == 'true' ]; then
    gum style --faint "$@"
  fi
}

parse_params() {
  if [ $# -gt 2 ]; then
    echo "Too many parameters provided"
    usage
  fi

  # Sane defaults
  DEBUG="false"
  RUN_DIR=$(cd "$(dirname "${BASH_SOURCE[0]}")" &>/dev/null && pwd -P)
  SOURCE=$(dirname "$RUN_DIR")

  while :; do
    case "${1-}" in
    -h | --help)
      usage
      ;;
    -v | --verbose)
      DEBUG="true"
      ;;
    --dummy-flag*)
      DUMMY_FLAG="true"
      ;;
    --dummy-param=*)
      DUMMY_PARAM="${1#*=}"
      ;;
    -?*)
      echo "Unknown option: $1"
      usage
      ;;
    *)
      break
      ;;
    esac
    shift
  done

  return 0
}

parse_params "$@"

sleep 5
cd $SOURCE && git pull
exit 0
